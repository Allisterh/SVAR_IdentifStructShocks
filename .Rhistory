install.packages("BVAR")
library(NVAR)
library(BVAR)
library(BVAR)# contains the fred_md dataset
library(IdSS)
library(vars)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
First.date <- "1959-02-01"
Last.date <- "2020-01-01"
data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
variables.with.na <- which(is.na(apply(data,2,sum)))
data <- data[,-variables.with.na]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat <- PCA$x[,1:(K+M)]
fast_moving <- c("HOUST","HOUSTNE","HOUSTMW","HOUSTS","HOUSTW","HOUSTS","AMDMNOx",
"FEDFUNDS","CP3Mx","TB3MS","TB6MS","GS1","GS5","GS10",
"COMPAPFFx","TB3SMFFM","TB6SMFFM","T1YFFM","T5YFFM","T10YFFM",
"AAAFFM","EXSZUSx","EXJPUSx","EXUSUKx","EXCAUSx")
data.slow <- data_scaled[,-which(fast_moving %in% names(data))]
PCA.star <- prcomp(data.slow) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat.star <- PCA.star$x[,1:K]
D <- cbind(data$FEDFUNDS,C.hat.star)
b.x <- solve(t(D)%*%D) %*% t(D) %*% C.hat
F.hat <- C.hat - data$FEDFUNDS %*% matrix(b.x[1,],nrow=1)
matrix(b.x[1,],nrow=1)
data$FEDFUNDS
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
First.date <- "1959-02-01"
Last.date <- "2020-01-01"
data$FEDFUNDS
rownames(data)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
First.date <- "1959-02-01"
Last.date <- "2020-01-01"
data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
data
First.date <- "1959-02-01"
Last.date <- "2020-01-01"
data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
rownames(data)
rownames(fred_md)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
?fred_transform
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
complete.cases(data)
library(BVAR)# contains the fred_md dataset
library(IdSS)
library(vars)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
# First.date <- "1959-02-01"
# Last.date <- "2020-01-01"
# data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
data <- data[complete.cases(data),]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat <- PCA$x[,1:(K+M)]
fast_moving <- c("HOUST","HOUSTNE","HOUSTMW","HOUSTS","HOUSTW","HOUSTS","AMDMNOx",
"FEDFUNDS","CP3Mx","TB3MS","TB6MS","GS1","GS5","GS10",
"COMPAPFFx","TB3SMFFM","TB6SMFFM","T1YFFM","T5YFFM","T10YFFM",
"AAAFFM","EXSZUSx","EXJPUSx","EXUSUKx","EXCAUSx")
data.slow <- data_scaled[,-which(fast_moving %in% names(data))]
PCA.star <- prcomp(data.slow) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat.star <- PCA.star$x[,1:K]
D <- cbind(data$FEDFUNDS,C.hat.star)
b.x <- solve(t(D)%*%D) %*% t(D) %*% C.hat
F.hat <- C.hat - data$FEDFUNDS %*% matrix(b.x[1,],nrow=1)
data_var <- data.frame(F.hat, FEDFUNDS = data$FEDFUNDS)
p <- 10
var <- VAR(data_var, p)
Omega <- var(residuals(var))
B <- t(chol(Omega))
D <- cbind(F.hat,data$FEDFUNDS)
loadings <- solve(t(D)%*%D) %*% t(D) %*% as.matrix(data_scaled)
irf <- simul.VAR(c=rep(0,(K+M)*p),Phi=Acoef(var),B,nb.sim=120,
y0.star=rep(0,(K+M)*p),indic.IRF = 1,
u.shock = c(rep(0,K+1),1))
irf.all <- irf %*% loadings
par(mfrow=c(2,2))
variables.2.plot <- c("FEDFUNDS","INDPRO","UNRATE","CPIAUCSL")
par(plt=c(.2,.95,.3,.95))
for(i in 1:length(variables.2.plot)){
plot(cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
type="l",xlab="months after shock",ylab=variables.2.plot[i])
}
dev.off()
dev.off()
library(BVAR)# contains the fred_md dataset
library(IdSS)
library(vars)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
# First.date <- "1959-02-01"
# Last.date <- "2020-01-01"
# data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
data <- data[complete.cases(data),]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat <- PCA$x[,1:(K+M)]
fast_moving <- c("HOUST","HOUSTNE","HOUSTMW","HOUSTS","HOUSTW","HOUSTS","AMDMNOx",
"FEDFUNDS","CP3Mx","TB3MS","TB6MS","GS1","GS5","GS10",
"COMPAPFFx","TB3SMFFM","TB6SMFFM","T1YFFM","T5YFFM","T10YFFM",
"AAAFFM","EXSZUSx","EXJPUSx","EXUSUKx","EXCAUSx")
data.slow <- data_scaled[,-which(fast_moving %in% names(data))]
PCA.star <- prcomp(data.slow) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat.star <- PCA.star$x[,1:K]
D <- cbind(data$FEDFUNDS,C.hat.star)
b.x <- solve(t(D)%*%D) %*% t(D) %*% C.hat
F.hat <- C.hat - data$FEDFUNDS %*% matrix(b.x[1,],nrow=1)
data_var <- data.frame(F.hat, FEDFUNDS = data$FEDFUNDS)
p <- 10
var <- VAR(data_var, p)
Omega <- var(residuals(var))
B <- t(chol(Omega))
D <- cbind(F.hat,data$FEDFUNDS)
loadings <- solve(t(D)%*%D) %*% t(D) %*% as.matrix(data_scaled)
irf <- simul.VAR(c=rep(0,(K+M)*p),Phi=Acoef(var),B,nb.sim=120,
y0.star=rep(0,(K+M)*p),indic.IRF = 1,
u.shock = c(rep(0,K+1),1))
irf.all <- irf %*% loadings
par(mfrow=c(2,2))
variables.2.plot <- c("FEDFUNDS","INDPRO","UNRATE","CPIAUCSL")
par(plt=c(.2,.95,.3,.95))
for(i in 1:length(variables.2.plot)){
plot(cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
type="l",xlab="months after shock",ylab=variables.2.plot[i])
}
plot(cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
type="l",xlab="months after shock",ylab=variables.2.plot[i])
i
cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
cumsum(irf.all[,which(variables.2.plot[i]==names(data))])
library(BVAR)# contains the fred_md dataset
library(IdSS)
library(vars)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
# First.date <- "1959-02-01"
# Last.date <- "2020-01-01"
# data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
data <- data[complete.cases(data),]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat <- PCA$x[,1:(K+M)]
fast_moving <- c("HOUST","HOUSTNE","HOUSTMW","HOUSTS","HOUSTW","HOUSTS","AMDMNOx",
"FEDFUNDS","CP3Mx","TB3MS","TB6MS","GS1","GS5","GS10",
"COMPAPFFx","TB3SMFFM","TB6SMFFM","T1YFFM","T5YFFM","T10YFFM",
"AAAFFM","EXSZUSx","EXJPUSx","EXUSUKx","EXCAUSx")
data.slow <- data_scaled[,-which(fast_moving %in% names(data))]
PCA.star <- prcomp(data.slow) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat.star <- PCA.star$x[,1:K]
D <- cbind(data$FEDFUNDS,C.hat.star)
b.x <- solve(t(D)%*%D) %*% t(D) %*% C.hat
F.hat <- C.hat - data$FEDFUNDS %*% matrix(b.x[1,],nrow=1)
data_var <- data.frame(F.hat, FEDFUNDS = data$FEDFUNDS)
p <- 10
var <- VAR(data_var, p)
Omega <- var(residuals(var))
B <- t(chol(Omega))
D <- cbind(F.hat,data$FEDFUNDS)
loadings <- solve(t(D)%*%D) %*% t(D) %*% as.matrix(data_scaled)
irf <- simul.VAR(c=rep(0,(K+M)*p),Phi=Acoef(var),B,nb.sim=120,
y0.star=rep(0,(K+M)*p),indic.IRF = 1,
u.shock = c(rep(0,K+1),1))
irf.all <- irf %*% loadings
par(mfrow=c(2,2))
variables.2.plot <- c("FEDFUNDS","INDPRO","UNRATE","CPIAUCSL")
par(plt=c(.2,.95,.3,.95))
for(i in 1:length(variables.2.plot)){
plot(cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
type="l",xlab="months after shock",ylab=variables.2.plot[i])
}
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
data <- data[complete.cases(data),]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat <- PCA$x[,1:(K+M)]
fast_moving <- c("HOUST","HOUSTNE","HOUSTMW","HOUSTS","HOUSTW","HOUSTS","AMDMNOx",
"FEDFUNDS","CP3Mx","TB3MS","TB6MS","GS1","GS5","GS10",
"COMPAPFFx","TB3SMFFM","TB6SMFFM","T1YFFM","T5YFFM","T10YFFM",
"AAAFFM","EXSZUSx","EXJPUSx","EXUSUKx","EXCAUSx")
data.slow <- data_scaled[,-which(fast_moving %in% names(data))]
PCA.star <- prcomp(data.slow) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat.star <- PCA.star$x[,1:K]
D <- cbind(data$FEDFUNDS,C.hat.star)
b.x <- solve(t(D)%*%D) %*% t(D) %*% C.hat
F.hat <- C.hat - data$FEDFUNDS %*% matrix(b.x[1,],nrow=1)
data_var <- data.frame(F.hat, FEDFUNDS = data$FEDFUNDS)
p <- 10
var <- VAR(data_var, p)
Omega <- var(residuals(var))
B <- t(chol(Omega))
D <- cbind(F.hat,data$FEDFUNDS)
loadings <- solve(t(D)%*%D) %*% t(D) %*% as.matrix(data_scaled)
irf <- simul.VAR(c=rep(0,(K+M)*p),Phi=Acoef(var),B,nb.sim=120,
y0.star=rep(0,(K+M)*p),indic.IRF = 1,
u.shock = c(rep(0,K+1),1))
irf.all <- irf %*% loadings
par(mfrow=c(2,2))
variables.2.plot <- c("FEDFUNDS","INDPRO","UNRATE","CPIAUCSL")
par(plt=c(.2,.95,.3,.95))
for(i in 1:length(variables.2.plot)){
plot(cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
type="l",xlab="months after shock",ylab=variables.2.plot[i])
}
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
# First.date <- "1959-02-01"
# Last.date <- "2020-01-01"
# data <- data[(rownames(data)>First.date)&(rownames(data)<Last.date),]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
library(BVAR)# contains the fred_md dataset
library(IdSS)
library(vars)
data <- fred_transform(fred_md,na.rm = FALSE, type = "fred_md")
data <- data[complete.cases(data),]
data.values <- scale(data, center = TRUE, scale = TRUE)
data_scaled <- data
data_scaled[1:dim(data)[1],1:dim(data)[2]] <- data.values
K <- 3
M <- 1
PCA <- prcomp(data_scaled) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat <- PCA$x[,1:(K+M)]
fast_moving <- c("HOUST","HOUSTNE","HOUSTMW","HOUSTS","HOUSTW","HOUSTS","AMDMNOx",
"FEDFUNDS","CP3Mx","TB3MS","TB6MS","GS1","GS5","GS10",
"COMPAPFFx","TB3SMFFM","TB6SMFFM","T1YFFM","T5YFFM","T10YFFM",
"AAAFFM","EXSZUSx","EXJPUSx","EXUSUKx","EXCAUSx")
data.slow <- data_scaled[,-which(fast_moving %in% names(data))]
PCA.star <- prcomp(data.slow) # implies that PCA$x %*% t(PCA$rotation) = data
C.hat.star <- PCA.star$x[,1:K]
D <- cbind(data$FEDFUNDS,C.hat.star)
b.x <- solve(t(D)%*%D) %*% t(D) %*% C.hat
F.hat <- C.hat - data$FEDFUNDS %*% matrix(b.x[1,],nrow=1)
data_var <- data.frame(F.hat, FEDFUNDS = data$FEDFUNDS)
p <- 10
var <- VAR(data_var, p)
Omega <- var(residuals(var))
B <- t(chol(Omega))
D <- cbind(F.hat,data$FEDFUNDS)
loadings <- solve(t(D)%*%D) %*% t(D) %*% as.matrix(data_scaled)
irf <- simul.VAR(c=rep(0,(K+M)*p),Phi=Acoef(var),B,nb.sim=120,
y0.star=rep(0,(K+M)*p),indic.IRF = 1,
u.shock = c(rep(0,K+1),1))
irf.all <- irf %*% loadings
par(mfrow=c(2,2))
variables.2.plot <- c("FEDFUNDS","INDPRO","UNRATE","CPIAUCSL")
par(plt=c(.2,.95,.3,.95))
for(i in 1:length(variables.2.plot)){
plot(cumsum(irf.all[,which(variables.2.plot[i]==names(data))]),lwd=2,
type="l",xlab="months after shock",ylab=variables.2.plot[i])
}
source("~/.active-rstudio-document", echo=TRUE)
IRF.0
IRF.0 <- 100*irf.function(x$THETA)
library(IdSS)
names(US3var)
x <- estim.armax(US3var[,"y.gdp.gap"],p=1,q=1)
library(AEC)
x <- estim.armax(US3var[,"y.gdp.gap"],p=1,q=1)
IRF.0 <- 100*irf.function(x$THETA)
IRF.0 <- 100*irf.function(x$THETA)
source("~/.active-rstudio-document", echo=TRUE)
IRF.0 <- 100*irf.function(x$THETA)
x <- estim.armax(US3var[,"y.gdp.gap"],p=1,q=1)
IRF.0 <- 100*irf.function(x$THETA)
c <- THETA[1]
x$THETA
IRF.0 <- 100*irf.function(x$THETA)
THETA <- x$THETA
c <- THETA[1]
phi <- THETA[2:(p+1)]
if(q>0){
theta <- c(1,THETA[(1+p+1):(1+p+q)])
}else{theta <- 1}
sigma <- THETA[1+p+q+1]
r <- dim(Matrix.of.Exog)[2] - 1
source("~/Desktop/tempo.R", echo=TRUE)
vardecomp
dim(IRFs.final)
dim(simulated.IRFs)
?Null
?replicate
dim(Q)
Q[,,1]
Q[,,2]
Q <- replicate(bootstrap.replications,diag(n), simplify="array")
Q[,,1]
Q[,,2]
En
Q[,,1]
source("~/Desktop/tempo.R", echo=TRUE)
Q[,,1]
Q[,,1] %*% t(Q[,,1])
dim(vardecomp)
Q <- replicate(bootstrap.replications,diag(n), simplify="array")
Q[,1]
Q[,,1]
Q[,,3]
source("~/Desktop/tempo.R", echo=TRUE)
variance.decomp(IRfs)
variance.decomp(IRFs)
variance.decomp(IRFs.final)
source("~/Desktop/tempo.R", echo=TRUE)
dim(IRFs.final)
vardecomp[2,2,40,,1]
vardecomp[2,2,40,]
dim(vardecomp)
variance.decomp
library(IdSS)
variance.decomp
library(IdSS)
library(readxl)
library(vars)
library(Matrix)
variance.decomp
variance.decomp
dim(IRFs.final)
variance.decomp <- variance.decomp(IRFs.final)
dim(variance.decomp$vardecomp)
source("~/Desktop/Script_labsession_0.R", echo=TRUE)
dim(res.svar.ordering$IRFs)
library(IdSS)
data(BQ)
par(mfrow=c(1,2))
plot(BQ$Date,BQ$Dgdp,type="l",main="GDP quarterly growth rate",
xlab="",ylab="",lwd=2)
plot(BQ$Date,BQ$unemp,type="l",ylim=c(-3,6),main="Unemployment rate (gap)",
xlab="",ylab="",lwd=2)
library(vars)
y <- BQ[,2:3]
est.VAR <- VAR(y,p=8)
Omega <- var(residuals(est.VAR))
vardecomp
# Compute (Id - Phi)^{-1}:
Phi <- Acoef(est.VAR)
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:2,1:2]
loss <- function(param){
B <- matrix(param,2,2)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:2,1:2] %*% B
loss <- 10000 * ( X[1,1]^2 + X[2,1]^2 + X[2,2]^2 + Theta[1,1]^2 )
return(loss)
}
res.opt <- optim(c(1,0,0,1),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B.hat <- matrix(res.opt$par,2,2)
print(cbind(Omega,B.hat %*% t(B.hat)))
nb.sim <- 40
par(mfrow=c(2,2));par(plt=c(.15,.95,.15,.8))
Y <- simul.VAR(c=matrix(0,2,1),Phi,B.hat,nb.sim,y0.star=rep(0,2*8),
indic.IRF = 1,u.shock = c(1,0))
plot(cumsum(Y[,1]),type="l",lwd=2,xlab="",ylab="",main="Demand shock on GDP")
plot(Y[,2],type="l",lwd=2,xlab="",ylab="",main="Demand shock on UNEMP")
Y <- simul.VAR(c=matrix(0,2,1),Phi,B.hat,nb.sim,y0.star=rep(0,2*8),
indic.IRF = 1,u.shock = c(0,1))
plot(cumsum(Y[,1]),type="l",lwd=2,xlab="",ylab="",main="Supply shock on GDP")
plot(Y[,2],type="l",lwd=2,xlab="",ylab="",main="Supply shock on UNEMP")
dim(y)
residuals(est.VAR)
y[p,]
Acoef(est.VAR)
coef(est.VAR)
coef(est.VAR)
coef(est.VAR)[1]
coef(est.VAR)[1][1]
coef(est.VAR)[1][17,1]
dim(coef(est.VAR)[1])
class(coef(est.VAR)[1])
A <- coef(est.VAR)[1]
A$Dgdp
coef(est.VAR)[1][[1]]
coef(est.VAR)[[1]]
coef(est.VAR)[[1]][1,1]
coef(est.VAR)[[1]][17,1]
n <- dim(y)[2]
n
coef(est.VAR)[[1]][n*p+1,1]
const1 <- coef(est.VAR)[[1]][n*p+1,1]
const2 <- coef(est.VAR)[[2]][n*p+1,1]
const2
p <- 8
n <- dim(y)[2]
T <- dim(y)[1]
T
all_eps <- residuals(est.VAR)
dim(all_eps)
B.hat
dim(PHI)
p <- 8
n <- dim(y)[2]
T <- dim(y)[1]
all_eps   <- residuals(est.VAR)
all_y_sim <- NULL
y_sim <- matrix(0,n*p,1)
for(t in (p+1):T){
eps <- all_eps[t-p,]
eta <- solve(B.hat) %*% eps
eta_extended <- matrix(c(eta,rep(0,n*(p-1))),ncol=1)
y_sim <- PHI %*% y_sim + B.hat %*% eta_extended
# store results
all_y_sim <- rbind(all_y_sim,y_sim[1:n])
}
all_eps   <- residuals(est.VAR)
all_y_sim <- NULL
y_sim <- matrix(0,n*p,1)
for(t in (p+1):T){
eps <- all_eps[t-p,]
eta <- solve(B.hat) %*% eps
eps_modified <- B.hat %*% eta_extended
eps_extended <- matrix(c(eps_modified,rep(0,n*(p-1))),ncol=1)
y_sim <- PHI %*% y_sim + eps_extended
# store results
all_y_sim <- rbind(all_y_sim,y_sim[1:n])
}
all_eps   <- residuals(est.VAR)
all_y_sim <- NULL
y_sim <- matrix(0,n*p,1)
for(t in (p+1):T){
eps <- all_eps[t-p,]
eta <- solve(B.hat) %*% eps
eps_modified <- B.hat %*% eta
eps_extended <- matrix(c(eps_modified,rep(0,n*(p-1))),ncol=1)
y_sim <- PHI %*% y_sim + eps_extended
# store results
all_y_sim <- rbind(all_y_sim,y_sim[1:n])
}
all_y_sim
plot(all_y_sim[,1],type="")
plot(all_y_sim[,1],type="l")
plot(all_y_sim[,2],type="l")
plot(all_y_sim[,1],type="l")
plot(cumsum(all_y_sim[,1]),type="l")
all_eps   <- residuals(est.VAR)
all_y_sim <- NULL
y_sim <- matrix(0,n*p,1)
for(t in (p+1):T){
eps <- all_eps[t-p,]
eta <- solve(B.hat) %*% eps
# Modify eta:
eta_modified <- eta
eta_modified[1] <- 0
eps_modified <- B.hat %*% eta_modified
eps_extended <- matrix(c(eps_modified,rep(0,n*(p-1))),ncol=1)
y_sim <- PHI %*% y_sim + eps_extended
# Store results
all_y_sim <- rbind(all_y_sim,y_sim[1:n])
}
plot(all_y_sim[,1],type="l")
plot(cumsum(all_y_sim[,1]),type="l")
all_eps   <- residuals(est.VAR)
all_y_sim <- NULL
y_sim <- matrix(0,n*p,1)
for(t in (p+1):T){
eps <- all_eps[t-p,]
eta <- solve(B.hat) %*% eps
# Modify eta:
eta_modified <- eta
eta_modified[2] <- 0
eps_modified <- B.hat %*% eta_modified
eps_extended <- matrix(c(eps_modified,rep(0,n*(p-1))),ncol=1)
y_sim <- PHI %*% y_sim + eps_extended
# Store results
all_y_sim <- rbind(all_y_sim,y_sim[1:n])
}
plot(all_y_sim[,1],type="l")
plot(cumsum(all_y_sim[,1]),type="l")
BQ$Date
plot(BQ$Date[(p+1):T],all_y_sim[,1],type="l")
plot(BQ$Date[(p+1):T],cumsum(all_y_sim[,1]),type="l")
library(vars)
y <- BQ[,2:3]
est.VAR <- VAR(y,p=8)
Omega <- var(residuals(est.VAR))
Omega
y <- BQ[,2:3]
est.VAR <- VAR(y,p=8)
Omega <- var(residuals(est.VAR))
Phi <- Acoef(est.VAR)
Phi <- Acoef(est.VAR)
Phi
PHI <- make.PHI(Phi)
View(PHI)
source("~/.active-rstudio-document", echo=TRUE)
par(plt=c(.1,.95,.2,.8))
res.jorda <- make.jorda.irf(y,posit.of.shock = 5,
nb.periods.IRF = 12,
nb.lags.endog.var.4.control=3,
indic.plot = 1, # Plots are displayed if = 1.
confidence.interval = 0.90)
